<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" this:Main.filePath="[directory.GetCurrentDirectory+&quot;\WorkbookPassTest&quot;]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:w="clr-namespace:WF_Tools;assembly=WF_Tools"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="filePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="MainFlow" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:GenericValue" Name="res" />
      <Variable x:TypeArguments="x:String" Name="range" />
      <Variable x:TypeArguments="sd:DataTable" Name="datatable" />
      <Variable x:TypeArguments="x:String" Name="formula" />
      <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="column" />
      <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="row" />
      <Variable x:TypeArguments="ui:GenericValue" Name="res1" />
      <Variable x:TypeArguments="s:String[]" Name="fileSuffix" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List (of String)]" Name="exceptionsList" />
      <Variable x:TypeArguments="x:String" Name="exc" />
      <Variable x:TypeArguments="x:Int32" Name="ind" />
      <Variable x:TypeArguments="x:String" Name="x">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="TestErrors" />
      <Variable x:TypeArguments="x:Int32" Name="TestExcel2013" />
    </Sequence.Variables>
    <w:CleanUp ProcessList="[{&quot;excel.exe&quot;}]" sap2010:WorkflowViewState.IdRef="CleanUp_1" />
    <Assign sap2010:Annotation.AnnotationText="1 - generate test errors to check error handling&#xA;0 - test normally (should pass)" DisplayName="Generate Test Errors?" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[TestErrors]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:Annotation.AnnotationText="1 - include the Office 2013 files (currently unusable due to UI-19177).&#xA;0 - exclude Office 2013 files in order to pass test." DisplayName="Include Office 2013 files?" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[TestExcel2013]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">1</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="RestoreFiles" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[filePath+&quot;\Test.xlsx&quot;]" DisplayName="Test.xlsx" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[filePath+&quot;\Tests.xlsx&quot;]" />
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[filePath+&quot;\test.xls&quot;]" DisplayName="Test.xls" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="True" Path="[filePath+&quot;\tests.xls&quot;]" />
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[filePath+&quot;\TestEx10P.xlsx&quot;]" DisplayName="TestEx10P.xlsx" sap2010:WorkflowViewState.IdRef="CopyFile_3" Overwrite="True" Path="[filePath+&quot;\TestsEx10P.xlsx&quot;]" />
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[filePath+&quot;\TestEx13P.xlsx&quot;]" DisplayName="TestEx13P.xlsx" sap2010:WorkflowViewState.IdRef="CopyFile_4" Overwrite="True" Path="[filePath+&quot;\TestsEx13P.xlsx&quot;]" />
      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[filePath+&quot;\TestEx16P.xlsx&quot;]" DisplayName="TestEx16P.xlsx" sap2010:WorkflowViewState.IdRef="CopyFile_5" Overwrite="True" Path="[filePath+&quot;\TestsEx16P.xlsx&quot;]" />
    </Sequence>
    <If Condition="[TestErrors=1]" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Assign DisplayName="fileListSuffixDenominator" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[fileSuffix]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[{"-bad.xlsx","-bad.xls","Ex10P-bad.xlsx",".xlsx",".xls","Ex10P.xlsx","Ex16P.xlsx"}]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
          <If Condition="[TestExcel2013=1]" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Assign DisplayName="fileListSuffixDenominator" sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[fileSuffix]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[{".xlsx",".xls","Ex10P.xlsx","Ex13P.xlsx","Ex16P.xlsx"}]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <Assign DisplayName="fileListSuffixDenominator" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[fileSuffix]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[{".xlsx",".xls","Ex10P.xlsx","Ex16P.xlsx"}]</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[ind]" DisplayName="ExecuteTestForEachFile" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[fileSuffix]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="True" WorkflowFileName="WorkbookTests.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="Suffix">[item]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="Path">[filePath]</InArgument>
                <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="ExcList">[exceptionsList]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Append Errors" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[exceptionsList]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <Assign DisplayName="Store Errors to var" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[x]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[x+environment.NewLine+item]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <If Condition="[x.Equals(&quot;&quot;)]" DisplayName="TestResults" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
          <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
            <ui:CommentOut.Body>
              <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;Workbook Test is PASSED.&quot;]" TopMost="True" />
              </Sequence>
            </ui:CommentOut.Body>
          </ui:CommentOut>
          <ui:LogMessage DisplayName="Success Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Workbook Test is PASSED.&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Throw DisplayName="Throw Errors Summary" Exception="[new uipath.Core.BusinessRuleException(&quot;Workbook Actions FAILED with the following errors:&quot;+environment.NewLine+x)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d1NDOlxfd29ya3NwYWNlXF9Xb3JrRmxvd3NfXDE4LjRcRXhjZWxcRXhjZWxfV29ya2Jvb2tfQ3JpdGljYWxQYXRoXFdvcmtib29rX01haW4ueGFtbEEBTQGLAQECTAPWAQ4CAQFWPlZWAgEDWwtbOgIBAmEFYWYCAVhiBWkOAgFUagVxDgIBUHIFeBACATZ5BZ4BCgIBI58BBcMBEgIBDcQBBdQBCgIBBGEcYTcCAVlnL2cwAgFXZDBkPAIBVW8vbzACAVNsMGw/AgFRcwdz4QECAUt0B3TeAQIBRnUHdfABAgFBdgd28AECATx3B3fwAQIBN3kTeSMCASR7CYIBEgIBMoUBCZwBFAIBJp8BmwGfAakBAgEhnwE5nwFAAgEfpQELwAEWAgEOxAETxAEtAgEFxgEJzwEUAgEJ0gEJ0gHpAQIBB3M7c14CAU5zugFz3gECAUx0O3RdAgFJdLgBdNsBAgFHdTt1YwIBRHXEAXXtAQIBQnY7dmMCAT92xAF27QECAT13O3djAgE6d8QBd+0BAgE4gAE2gAGKAQIBNX03fUMCATOGAQubARACASemAQ2sASUCARetAQ2/ARoCAQ/HAQvNARsCAQzOAQvOAacBAgEK0gE90gG8AQIBCIYBGYYBLAIBKIgBD48BGAIBLpIBD5kBGAIBKqgBR6gBTQIBHakBRakBTwIBG6YBuAGmAcwBAgEaqgFTqgFjAgEYrQGdAa0BrwECARWzARO8AR4CARDOAXzOAaQBAgELjQE8jQF1AgExigE9igFJAgEvlwE8lwFoAgEtlAE9lAFJAgErtAEVuwEeAgERuQFAuQFcAgEUtgFBtgFEAgES</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="CleanUp_1" sap:VirtualizedContainerService.HintSize="798,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="798,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="798,132">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CopyFile_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyFile_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyFile_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyFile_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="CopyFile_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="798,394">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="531,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="798,480" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="314,318" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,569">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="798,703" />
      <sap2010:ViewStateData Id="MessageBox_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="416,261" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="416,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="438,516">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="798,664">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="820,2876">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="860,2996">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>